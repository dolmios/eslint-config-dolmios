module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint'],
  extends: ['eslint:recommended', 'plugin:import/recommended', 'plugin:@typescript-eslint/recommended', 'prettier'],
  rules: {
    '@typescript-eslint/explicit-function-return-type': 'error',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/no-non-null-assertion': 'error',
    '@typescript-eslint/no-unused-vars': [
      'error',
      {
        args: 'none',
        ignoreRestSiblings: true,
        vars: 'all',
      },
    ],
    '@typescript-eslint/no-var-requires': 'off',
    camelcase: ['error', { properties: 'never' }],
    'comma-spacing': [
      'error',
      {
        after: true,
        before: false,
      },
    ],
    'eol-last': ['error', 'always'],
    'func-call-spacing': ['error', 'never'],
    'func-names': ['error', 'as-needed'],
    'import/export': 'error',
    'import/first': 'warn',
    'import/named': 'warn',
    'import/namespace': 'error',
    'import/no-deprecated': 'error',
    'import/no-duplicates': 'error',
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: true,
      },
    ],
    'import/no-named-as-default': 'off',
    'import/no-unresolved': [
      'error',
      {
        ignore: ['^@'],
      },
    ],
    'import/order': [
      'error',
      {
        alphabetize: {
          caseInsensitive: true,
          order: 'asc',
        },
        groups: ['builtin', 'external', 'parent', 'sibling', 'index'],
        'newlines-between': 'always',
      },
    ],
    'no-alert': 'error',
    'no-array-constructor': 'error',
    'no-console': [
      'error',
      {
        allow: ['error', 'warn'],
      },
    ],
    'no-continue': 'error',
    'no-duplicate-imports': ['error', { includeExports: true }],
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-extra-parens': ['error', 'functions'],
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-label-var': 'error',
    'no-labels': ['error', { allowLoop: false, allowSwitch: false }],
    'no-lone-blocks': 'error',
    'no-mixed-operators': [
      'error',
      {
        allowSamePrecedence: false,
        groups: [
          ['&', '|', '^', '~', '<<', '>>', '>>>'],
          ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
          ['&&', '||'],
          ['in', 'instanceof'],
        ],
      },
    ],
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-spaces': ['error', { ignoreEOLComments: true }],
    'no-multi-str': 'error',
    'no-multiple-empty-lines': ['error', { max: 1 }],
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-octal-escape': 'error',
    'no-proto': 'error',
    'no-template-curly-in-string': 'error',
    'no-trailing-spaces': 'error',
    'no-unreachable-loop': 'error',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
        enforceForJSX: true,
      },
    ],
    'no-use-before-define': ['error', { classes: true, functions: false }],
    'no-useless-call': 'error',
    'no-useless-concat': 'error',
    'no-whitespace-before-property': 'error',
    'one-var': [
      'error',
      {
        initialized: 'never',
      },
    ],
    semi: ['error', 'always'],
    'semi-spacing': ['error', { after: true, before: false }],
    'space-before-blocks': ['error', 'always'],
    'space-before-function-paren': [
      'error',
      {
        anonymous: 'never',
        asyncArrow: 'always',
        named: 'never',
      },
    ],
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': 'error',
    'space-unary-ops': ['error', { nonwords: false, words: true }],
    'spaced-comment': ['error', 'always', { line: { exceptions: ['-'] } }],
    'template-curly-spacing': ['error', 'never'],
    yoda: ['error', 'never'],
  },
};
